worker_processes 5;

events {
    worker_connections 2048;
    # multi_accept on;
}

http {
    server_tokens off;
    autoindex off;

    access_log /dev/stdout;
    error_log /dev/stdout info;

    # Avoid usage of nginx buffer and directly get data from the kernel buffer
    sendfile on;

    # Enable asynchronous I/O
    aio on;

    # Enable direct I/O (bypass OS cache for large files)
    directio 4m;

    # Disable TCP buffering
    tcp_nodelay on;

    # Stack TCP packets until a full one is formed and send (TCP_CORK algorithm)
    tcp_nopush on;

    # Disable compression (Cloudflare will do it)
    gzip off;

    # Decrease default timeouts for high traffic
    keepalive_timeout 20;
    client_body_timeout 15;
    client_header_timeout 15;
    send_timeout 10;

    types_hash_max_size 2048;

    include /etc/nginx/mime.types;

    server {
        listen 80;
        server_name _;

        root /app;
        index index.html;

        # Request body memory buffer size
        client_body_buffer_size 256k;

        # Store complete request body in a single buffer (optimize I/O as we have a big enough buffer)
        client_body_in_single_buffer on;

        # Quickly close connection if it's too big (avoid big uploads)
        client_max_body_size 64k;

        # Block WordPress Pingback DDoS attacks
        if ($http_user_agent ~* "WordPress") {
            return 403;
        }

        # HTTP cache
        location ~* \.(?:ico|css|js|png|svg|otf|ttf|eot|woff2|woff)$ {
            add_header 'Cache-Control' "public, max-age=31536000, s-maxage=31536000";
        }

        location ~* \.(?:json)$ {
            add_header 'Cache-Control' "public, max-age=60, s-maxage=60";
        }

        location ~* \.(?:html)$ {
            add_header 'Cache-Control' "public, max-age=60, s-maxage=60";
            add_header 'X-XSS-Protection' "1; mode=block";
            add_header 'X-Content-Type-Options' nosniff;
        }

        location / {
            try_files $uri /index.html;
        }
    }
}
